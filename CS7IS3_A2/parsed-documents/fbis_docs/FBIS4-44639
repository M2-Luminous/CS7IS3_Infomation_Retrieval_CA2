FBIS4-44639 "jpest011__l94024" JPRS-EST-94-011-L JPRS Science & Technology Europe 7 January 1994 WEST EUROPE COMPUTERS HOOD Object-Oriented Programming Method Improved HOOD Object-Oriented Programming Method Improved 94WS0214B Paris 01 INFORMATIQUE in French 7 Jan 94 p 48--FOR OFFICIAL USE ONLY 94WS0214B Paris 01 INFORMATIQUE French CSO [Article by Claire Remi: "HOOD Object-Oriented Programming Method"] [Text] HOOD is an object-oriented programming method designed for project managers, quality control executives, and programmers involved in major real or time-shared projects. Prior knowledge of the application field has proved to be essential for learning the method. In the footsteps of the Ada language and of major military, aeronautics and space programs, object-oriented methods of analysis or programming have undergone extensive development. The HOOD method (Hierarchical Object-Oriented Design), which is today one of the programming standards with Merise and Sadt, was conceived in 1987 in response to an international call for proposals from ESA (European Space Agency). The solution proposed by a consortium composed of Cisi Ingenierie, Matra Espace, and CRI, was the one selected. HOOD, adopted by most European software development projects for aeronautics and space, is now expanding throughout all sectors of industry. CNES, CEA, GDF, CNET, Dassault Systemes are among its users, as well as universities (Toulouse, Pisa in Italy, and so on). After years of successive use and updates, HOOD is now full grown with version 3.1. It has become a complete text and graphic method for guiding design through its stages; it specifies related documents, takes into account the dynamic factors of applications, supports the development of distributed systems, and allows direct and reversible linkage to the produced code. It makes it possible to represent a system as a hierarchy of objects. As explained by OPL, a computer consulting firm, "this combination (hierarchical design and the notion of object), is the very heart of the method and makes it possible to combine the most modern techniques (object-oriented design) with industry requirements (subcontracts, validation of integration, and so on)." A HOOD-designed system can be implemented in classic languages like Ada or C, in object-oriented languages like C++, or in reactive languages like Esterel or Electre. Method Calls for Rules and Modeling The goal of HOOD training is to learn to make efficient use of the method while avoiding its traps; to ensure linking between design and programming; to integrate both real time constraints at the design stage, and distributed system problems at the design level; and to identify and learn to use the available development environments. This training usually includes an introductory component to object-oriented design. Jean-Pierre Rosen (Adalog) explains that "HOOD is a complete method requiring two features: rules, and modeling. With the many tools available on the market, the rules of the method can be checked. On the other hand, there is no way to automate modeling. It is therefore important to complete the course with examples stressing the modeling component." The HOOD method is often presented as part of more general training courses on object-oriented analysis and design which include other methods (Booch, Shlaer & Mellor, Coad & Yourdon, and so on), or in courses on the object approach, as is the case with courses offered by Cap Sesa Institute. These training courses are designed for those in charge of real-time development who are looking for a method suited to their needs; they are also designed for new HOOD users who want a clear presentation of the method before tackling their development; and they are designed for HOOD tool users aware that a sound basic methodology is essential, as well as for quality control managers wanting to acquire a good grasp of the method. The Ada/HOOD course offered by Adalog concentrates on the relationship between method and language; it makes it possible for quality control managers, certification agencies, and maintenance staffs to become qualified to check and correct applications developed in Ada using the HOOD method. "Correct Positioning of the Method Within the Software's Life Cycle" According to Michel Lai, director of Methods Quality Control and in charge of object-oriented methods at Ingenia, "the HOOD method fits within industrial efforts aimed at incorporating software technologies, and within measures toward quality assurance and control. The HOOD method is intended for engineers already experienced in the profession and in the application field that concern them. It is a downward hierarchy method aiming to establish relationships between modules so as to construct a software architecture. It is a tool for expressing computer solutions within a logical and physical model. As with any method, in the absence of a solid understanding, it is possible to interpret a description based on boxes and arrows, by distorting the process. It is necessary to correctly position the method within the life cycle of the software: the HOOD method concerns software design and the early stage of coding; it deals only lightly with the analytic phase and not at all with specification aspects. This positioning helps avoid erroneous interpretations."
