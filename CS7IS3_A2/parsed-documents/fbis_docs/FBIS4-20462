FBIS4-20462 "jpcst004___94032" JPRS-CST-94-004 JPRS Science & Technology China 1 April 1994 Computers Software Environment of Special-Purpose-Processor-Based Software Environment of Special-Purpose-Processor-Based Neural Network Simulation System 94P60143A Beijing JISUANJI XUEBAO [CHINESE JOURNAL OF COMPUTERS] in Chinese Vol 16 No 12, Dec 93 pp 947-951 94P60143A Beijing JISUANJI XUEBAO [CHINESE JOURNAL OF COMPUTERS] Chinese CSO [Article by Wang Dongsheng [3769 2639 3932], Wang Jin [3076 6651], et al. of the Division of Electronic Technology, University of Science & Technology of China (USTC), Hefei 230026: ``Software Environment of SP[.sup]2[/]N[.sup]2[/]S[.sup]2[/]''; MS received 8 Jul 92. Cf. brief report in JPRS-CST-92-010, 22 May 92 p 27] [Abstract] SP[.sup]2[/]N[.sup]2[/]S[.sup]2[/], a special-purpose-processor-based neural network virtual simulation system developed by the authors at USTC, is introduced. This system consists of a multiple-instruction-stream/multiple-data-stream (MIMD) parallel processing system and its software support environment. The hardware architecture, shown in Figure 1 below, consists of four TMS320C25 DSP [digital signal processor] chips and four dual-port memory (DPM) chips interconnected into a ring; in addition, each DSP has its own program memory (PM), written with C25 assembly-language code, and its own working memory (WM), for storing inter-neuron connection weights. The software support environment, shown in Table 1 below, consists of two levels: bottom-layer software, including a service subroutine for the servo-simulation system, and applications software, including neural network simulation programs and some applications subroutines. These programs mostly utilize conventional network-decomposition techniques for popular neural network models such as Hopfield and BP [backpropagation]. Figures 2-5, not reproduced, show a BP network decomposition, a computation sequence and data transfer for Equation 7, a computation sequence and data transfer for Equation 8, and a Hopfield network decomposition. In a neural network simulation experiment, the authors ran such decomposition algorithms on the SP[.sup]2[/]N[.sup]2[/]S[.sup]2[/] and obtained the results listed in Table 2 below. In Table 2, single-processor simulation speed indicates number of characters recognized per second via an IBM PC 486 microcomputer (column 2) and number of seconds per image for image compression via an IBM PC 386 microcomputer with 80387 coprocessor (column 3). Table 2 therefore indicates that the neural network simulation speed of the SP[.sup]2[/]N[.sup]2[/]S[.sup]2[/] is 56 times that of an IBM PC 486 for character recognition, and 100 times that of an IBM PC 386 (with 80387 coprocessor) for image compression. Figure 1. SP[.sup]2[/]N[.sup]2[/]S[.sup]2[/] Hardware Architecture ------------------------------------------------------------------------------- |Table 1. SP[.sup]2[/]N[.sup]2[/]S[.sup]2[/] Software Support Environme-| |nt | ------------------------------------------------------------------------------- | |TMS320C25 Assembly Langu-|C Language | | |age | | ------------------------------------------------------------------------------- |Applications software |Character recognition |Parameter installation | ------------------------------------------------------------------------------- |Image compression |Menu management | | ------------------------------------------------------------------------------- |Associative memory |Sample editing | | ------------------------------------------------------------------------------- |Network decomposition |Graphical display | | ------------------------------------------------------------------------------- |Bottom-layer software |Memory testing |8088 assembly language | ------------------------------------------------------------------------------- |Software speed testing |C25 code loading | | ------------------------------------------------------------------------------- |Communications |C25 code run control | | ------------------------------------------------------------------------------- |Floating-point addition |Data transfer | | |and multiplication | | | ------------------------------------------------------------------------------- ------------------------------------------------------------------------------- |Table 2. Simulation Experimental Results | ------------------------------------------------------------------------------- |Simulation Contents |Character Recognition |Image Compression | ------------------------------------------------------------------------------- |Network model |Hopfield |3-layer BP | ------------------------------------------------------------------------------- |Input mode |20 x 20 dot-matrix chara-|128 x 128 images with 256| | |cters | gray levels | ------------------------------------------------------------------------------- |Data format |Integer |Floating point (IEEE sta-| | | |ndard) | ------------------------------------------------------------------------------- |Number of neurons |400 |136 | ------------------------------------------------------------------------------- |Number of connection wei-|160000 |1024 | |ghts | | | ------------------------------------------------------------------------------- |Weight update speed |9MIPS |149KIPS Â¥SP[.sup]2 | | | |[/]N[.sup]2[/]S[.sup]| | | |2[/] simulation speed | ------------------------------------------------------------------------------- |56 characters/s |18 sec/image | | ------------------------------------------------------------------------------- |Single-processor simulat-|1 character/s |1800 sec/image | |ion speed | | | ------------------------------------------------------------------------------- |Simulation speed ratio |56 |100 | ------------------------------------------------------------------------------- References 1. Wang, J., et al., ``The Architecture of Neural Emulator KDNeuro-I,'' Proc. Int. Conf. on CAS, China, Shenzhen, 1991, 69-71. 2. Zhuang Zhenquan, Wang Dongsheng, and Wang Xufa, ``Neural Networks and Neurocomputers'' [in Chinese], DIANZI JISHU YINGYONG [APPLICATION OF ELECTRONIC TECHNIQUE], 1990, (5), 38-41. 3. Hopfield, J.J., ``Neural Networks and Physical Systems with Emergent Collective Computational Abilities,'' PROC. NATIONAL ACADEMY OF SCIENCE, USA, 1982, (79), 2554-2558.
