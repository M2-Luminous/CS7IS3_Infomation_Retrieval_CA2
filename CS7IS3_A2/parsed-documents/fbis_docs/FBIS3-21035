FBIS3-21035 "jpest007___94032" JPRS-EST-94-007 Document Type:JPRS Document Title:Science & Technology Europe/International 27 January 1994 WEST EUROPE COMPUTERS France: First Object-Oriented Real-Time Executive Previewed BR0802110894 Paris ELECTRONIQUE INTERNATIONAL in French 27 Jan 94 p30 BR0802110894 Paris ELECTRONIQUE INTERNATIONAL Language: French Article Type:BFN [Article signed Thierry Levy-Abegnoli: "The First Object-Oriented Real Time Executive Is Born"] [Text] A real-time executive developed by the French firm Microprocess could lead to major upheavals not just for the development of on-board software but also for its implementation. It extends the advantages of object-oriented technology to the whole of the application's life cycle. The French company Microprocess has recently developed SoftKernel, a real-time executive that is unique in the world since it is completely object-oriented. In particular it brings an extreme degree of modularity to the stages of development, maintenance, and even operation while optimizing the available memory space. Moreover, the very design of SoftKernel means that is particularly easily ported from one microprocessor architecture to the next and also ensures a high level of application portability. In addition, with SoftKernel the executive and the applications form a whole. These advantages will become particularly evident when used with on-board applications which have limited resources. Microprocess explains that the principle used is an extension of the microkernel concept to all parts of the executive and to all application programs. Thus, as with Chorus, there is a microkernel charged with managing the memory area (and therefore linked to the microprocessor). The novelty, however, lies in the fact that other microkernels manage the files, interrupts, semaphores, etc. In fact, we find more or less the same principle in Chorus, except that with SoftKernel it is possible to create a specific version of any microkernel (they are all written in C++, sometimes with a bit of assembly language). You therefore only need to make an "instantiation" (a form of cloning) of the standard microkernel (which is just a C++ object) which inherits all of its properties, and then alter it. Moreover, an application will itself be produced by the instantiation of the "task" microkernel. This architecture makes it possible to optimize the available resources without any particular effort, since several applications can share a set of microkernels and thus share the same code. For example, in a fax machine, the applications controlling the document scanner and the user interface will both communicate with the application controlling the line. Product designer Bertrand Dautrevaux explained: "It would be possible to do the same thing with a conventional executive and programs written in C, but then you would have to make sure that there was no conflict between the different applications. With SoftKernel you do not run any such risk." A number of different developers can therefore easily work in parallel on the same project. Modularity Preserved In The Operating Stage This modularity is also expressed in other ways. Thanks to dynamic links established when the application is run, the basic and application microkernels can be loaded unsequenced into memory. It is therefore a simple task to replace one application microkernel with another, even on the target system itself and especially if it is equipped with flash memory. This then makes it simple to produce different versions of a product, or an open-ended product (for example, one which could take add-on communication protocols). In addition, it would be possible to order the transfer of certain "critical" microkernels, for example from ROM [read-only memory] to RAM [random access memory], so as to optimize performance. In Bernard Dautrevaux's opinion: "Such functions are impossible using conventional techniques because the applications are monolithic. Even if developers write in C++, if they use a traditional executive then the executable code will be monolithic. Therefore the advantage of the inherent modularity of object-oriented technology is only felt at the development stage." The development of SoftKernel took just seven man-years, plus 10 man-years for the development environment. Bernard Dautrevaux again: "That is a lot less than was needed for Chorus, but then SoftKernel is only an executive, not a true operating system." For the time being, SoftKernel has been ported to Motorola 68000, Intel 8086 (real mode) and 386 (protected mode) and Sparc architectures. Porting to ARM is also being examined. Of course, this executive is aimed at industrial-type real-time applications, but it is also aimed at voluminous on-board applications with resources in the order of 64K of ROM and the same amount of RAM: for example, intelligent radiotelephones, small printers, and military applications. Microprocess does not, however, intend to compete with the Apple Newton or Microsoft At Work technologies which are aimed at more evolved, resource-greedy applications.
