FBIS4-23058 "jpust009___94022" JPRS-UST-94-009 JPRS Science & Technology Central Eurasia 18 April 1994 COMPUTERS Optimum Parallel Reallocations of Two-Dimensional Arrays Optimum Parallel Reallocations of Two-Dimensional Arrays 947G0015A Moscow PROGRAMMIROVANIYE in Russian No. 6, Nov-Dec 93 (manuscript received 17 Aug 92) pp 81-87 947G0015A Moscow PROGRAMMIROVANIYE Russian CSO [Article by B.Ya. Shteynberg, Computer Center at Rostov University; UDC 681.124.2] [Abstract] For optimizing the reallocation of two-dimensional arrays in a supercomputer memory, algorithms are constructed which minimize the number of simultaneous data transfers for executing nests of cycles such as transposition of a matrix. The memory is assumed to consist of p segments so that p simultaneous data acquisitions or p simultaneous data retrievals are possible, program fragments being considered here which contain arrays with indices linearly dependent on the cycle counters I and J. The reallocation problem is thus reduced to synthesis of a parallel algorithm for fastest execution of the two-dimensional cycle DO 1 J = 0,N DO 1 I = 0,M 1 Y(I,J) = Y(I,J)= X(a*I + b*J + c, a1*I + b1*J + c1) involving two orthogonally disposed arrays Y and X. It must be kept in mind here that, unlike distribution of data, allocation of data does not indicate into which cell J of a memory segment a given array element I will move. The problem is solved for N= M= p- 1 and two specific cases. The first case is a fully accessible commutator with p inputs and p outputs which can be connected to one another, the simplest one being such a commutator where at some instant of time one input can be connected to only one output, while simultaneously another input can be connected to another output. The second case is a ring network facilitating simultaneous transfers but only those which correspond to cyclic shifts, namely permutations _s_ such that (_s_[.sub]i[/]- i) mod p = _s_[.sub]j[/] mod p for any i,j in respective 1,...,p sets. The reallocation algorithms involve deparallelization of cycles and are validated by three lemmas: 1) when a,b,p are natural numbers, then there exists a number t such that GCD(a + t*b,p)= GCD.(a,b,p)= 1; 2) when a,b,c are integers, then t can be any number in the set of integers; 3) for any integers b and p there exist integers t and s such that t*b + s*p= GCD(b,p) and t is the reciprocal of p (GCD - greatest common divisor). Following rigorous proofs of these lemmas, respective algorithms are applied to reallocation of an array in a multiprocessor computer system with either a universal commutator or with a ring network. Theorems are then proved, with the aid of an appropriate fourth lemma each, which define the least number of transfers necessary for simultaneously executing a nest of cycles DO 1 L = 0,p- 1 1 A(u*I + v, u1*I + v1)= B(a*I + b, a1*I + b1) over a universal commutator and over ring network respectively. This number is p*d in the first case with d= GCD(a,b,p) and p or p[.sup]2[/]/q in the second case, q being the largest divisor of c/GCD(a,b,c)= GCD(a,b,c)/b and each transfer being a shift. Transposition of a two-dimensional p-order matrix p in accordance with the appropriate algorithm is demonstrated on a binary cycle DO 1 J = 0,p-1 DO 1 I= 0,p-1 1 Y(I,J) = X(J,I) equivalent to a DO 1 L = 0,p-1 DO 1 I = 0,p-1 1 Y((I,(I+L) mod p) = X((I+L) mod p,I) cycle. References 7.
