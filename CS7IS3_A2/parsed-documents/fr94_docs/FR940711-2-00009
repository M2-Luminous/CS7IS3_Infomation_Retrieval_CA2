FR940711-2-00009 FR940711-2-00005 b. The use of FIPS high level programming languages is strongly recommended when one or more of the following situations exist: _It is anticipated that the life of the program will be longer than the life of the presently utilized equipment. _The application or program is under constant review for updating of the specifications, and changes may result frequently. _The application is being designed and programmed centrally for a decentralized system that employs computers of different makes, models and configurations. _The program will or might be run on equipment other than for which the program is initially written. _The program is to be understood and maintained by programmers other than the original ones. _The advantages of improved program design, debugging, documentation and intelligibility can be obtained through the use of this high level language regardless of interchange potential. _The program is or is likely to be used by organizations outside the Federal Government (i.e., State and local governments, and others). c. Nonstandard language features should be used only when the needed operation or function cannot reasonably be implemented with the standard features alone. Although nonstandard language features can be very useful, it should be recognized that their use may make the interchange of programs and future conversion to a revised standard or replacement processor more difficult and costly. d. It is recognized that programmatic requirements may be more economically and efficiently satisfied through the use of report generation, database management, or text processing languages. The use of any facility should be considered in the context of system life, system cost, data integrity, and the potential for data sharing. e. Programmatic requirements may be also more economically and efficiently satisfied by the use of automatic program generators. However, if the final output of a program generator is a COBOL source program, then the resulting program should conform to the conditions and specifications of FIPS COBOL. f. When it is determined that a programming language that has been adopted as a FIPS is to be used for an application or program, a processor conforming to the FIPS programming language shall be used, if available. It is not intended that existing programs be rewritten solely for the purpose of conforming to a FIPS programming language. If a program is to be part of an existing application written in a programming language not conforming to a FIPS, the language processor used for the existing application may be used for the new program. 10. Specifications. FIPS COBOL specifications are the same as American National Standard COBOL as specified in ANSI X3.23&hyph;1985, ANSI X3.23a&hyph;1989 and ANSI X3.23b&hyph;1993. ANSI X3.23&hyph;1985, ANSI X3.23a&hyph;1989 and ANSI X3.23a&hyph;1993 specify the form of a program written in COBOL, formats for data, and rules for program and data interpretation. The standards do not specify limits on the size of programs, minimum system requirements, the means of supervisory control of programs, or the means of transforming programs internally for processing. In addition, the following requirements apply: a. For purposes of FIPS COBOL, the modules defined in ANSI X3.23&hyph;1985 and ANSI X3.23a&hyph;1989 are combined into three subsets and four optional modules. The three subsets are identified as Minimum, Intermediate, and High. The four optional modules are Report Writer, Communication, Debug, and Segmentation. These four optional modules may be associated with any of the subsets. The high subset is composed of all language elements of the highest level of all required modules. The intermediate subset is composed of all language elements of level 1 of all required modules except the Intrinsic Function module. The minimum subset is composed of all language elements of level 1 of the Nucleus, Sequential I&hyph;O, and Inter-Program Communication modules. The following table reflects the composition of the required subsets and the relationship of the subsets and the optional modules. The numbers in the table refer to the level within a module as designated in ANSI X3.23&hyph;1985 and ANSI X3.23A&hyph;1989, and a dash denotes the corresponding module is omitted or may be omitted.
